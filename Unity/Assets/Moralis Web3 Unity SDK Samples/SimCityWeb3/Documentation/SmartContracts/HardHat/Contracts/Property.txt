// SPDX-License-Identifier: MIT
pragma solidity ^0.8.7;

import "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol";
import "@openzeppelin/contracts/utils/Counters.sol";

// Each ERC721 instance here represents a globally unique 
// Real-estate property for the "Sim City Web3" game 
contract Property is ERC721URIStorage {

    // Auto generates tokenIds
    using Counters for Counters.Counter;
    Counters.Counter private _tokenIds;

    // The user who owns the ERC721 instance
    address owner;

    // Cosmetic token naming of "SCWP" 
    // which means "Sim City Web3 Property"
    constructor() ERC721("Property", "SCWP") 
    {
        owner = msg.sender;
    } 

    // Called from the game to mint a new property
    // The tokenURI contains property metadata (latitude, longitude)
    function mintPropertyNft(string memory tokenURI) public returns (uint256)
    {
        // DISCLAIMER -- NOT A PRODUCTION READY CONTRACT
        // require(msg.sender == owner);

        uint256 newItemId = _tokenIds.current();
        _mint(msg.sender, newItemId);
        _setTokenURI(newItemId, tokenURI);

        _tokenIds.increment();
        return newItemId;
    }
    
    // Called from the game to delete ("burn") an existing property
    function burnPropertyNft(uint256 tokenId) public 
    {
        // DISCLAIMER -- NOT A PRODUCTION READY CONTRACT
        // require(msg.sender == owner);

        _burn (tokenId);
    }
}